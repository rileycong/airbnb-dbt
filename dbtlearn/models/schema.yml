version: 2

models:
  - name: dim_listings_cleansed
    columns:

    - name: listing_id
      description: Primary key for the listing
      tests:
         - unique
         - not_null
    
    - name: host_id
      description: The hosts' id. References the host table.
      tests:
        - not_null
        - relationships:
            to: ref('dim_hosts_cleansed')
            field: host_id
    
    - name: room_type
      description: Type of apartment/room.
      tests:
        - accepted_values:
            values: ['Entire home/apt',
                     'Private room',
                     'Shared room',
                     'Hotel room'    
                    ]
    
    - name: minimum_nights
      description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
      tests:
        - positive_value

  - name: dim_hosts_cleansed
    columns:
      - name: host_id
        tests:
          - not_null
          - unique
      
      - name: host_name
        tests:
          - not_null
      
      - name: is_superhost
        description: Whether the host is a highly rated host or not.
        tests:
          - accepted_values:
              values: ['t', 'f']
  
  - name: fct_reviews
    columns:
      - name: listing_id
        description: The listing ID. References the listing table.
        tests:
          - relationships:
              to: ref('dim_listings_cleansed')
              field: listing_id

      - name: reviewer_name
        description: '{{ doc("dim_hosts_cleansed__reviewer_name") }}'
        tests:
          - not_null
      
      - name: review_sentiment
        description: The sentiment classification of the review.
        tests:
          - accepted_values:
              values: ['positive', 'neutral', 'negative']

  - name: dim_listings_w_host
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
            compare_model: source('airbnb', 'listings')      
    columns:
          - name: price
            description: '{{ doc("dim_listings_w_host__price") }}'
            tests:
              - dbt_expectations.expect_column_quantile_values_to_be_between:
                  quantile: .99
                  min_value: 50
                  max_value: 500
              - dbt_expectations.expect_column_max_to_be_between:
                  max_value: 5000   # this test will fail but we would only get a warning
                  config:
                    severity: warn
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: number  # in snowflake this is data type is number
